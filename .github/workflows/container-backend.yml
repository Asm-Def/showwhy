name: Build Backend Container
on:
  push:
    branches: [main]
  pull_request:
    paths:
      - 'python/**/*'
      - '**/*.py'
      - '**/*.toml'
      - .github/workflows/container-backend.yml
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >>$GITHUB_OUTPUT

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Get Docker Image Details
        id: image-details
        run: |
          echo "Get Details; Ref=$REF, Run Number=$RUN_NUM"
          if [ "$REF" == "refs/heads/main" ]; then
              echo "tag=latest" >>$GITHUB_OUTPUT
          else
              echo "tag=dev-$RUN_NUM" >>$GITHUB_OUTPUT
          fi
        env:
          REF: ${{ github.ref }}
          RUN_NUM: ${{ github.run_number }}

      - name: Build and Publish Docker Container
        uses: pmorelli92/github-container-registry-build-push@2.0.0
        if: github.ref == 'refs/heads/main'
        with:
          github-push-secret: ${{secrets.GITHUB_TOKEN}}
          docker-image-name: showwhy-backend
          docker-image-tag:  ${{ steps.image-details.outputs.tag }}
          dockerfile-path: ./python/backend/Dockerfile
          build-context: ./python/backend

      - name: Build Docker Container (dev)
        if: github.ref != 'refs/heads/main'
        working-directory: ./python/backend
        run: docker build .
  