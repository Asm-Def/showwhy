
name: Causal Platform CI
pool: resilience-build-agents-1es

trigger:
  batch: true
  branches:
    include:
      - main

variables:
  NODE_VERSION: '16.x'
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn/cache
  isMainBranch: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
  isProdBranch: $[eq(variables['Build.SourceBranch'], 'refs/heads/prod')]

stages:
  - stage: Compliance
    dependsOn: []
    jobs:
      - job: ComplianceJob
        pool:
          vmImage: windows-latest
        steps:
          - task: CredScan@3
            inputs:
              outputFormat: sarif
              debugMode: false

          - task: ComponentGovernanceComponentDetection@0
            inputs:
              scanType: 'Register'
              verbosity: 'Verbose'
              alertWarningLevel: 'High'

          - task: PublishSecurityAnalysisLogs@3
            inputs:
              ArtifactName: 'CodeAnalysisLogs'
              ArtifactType: 'Container'

  - stage: DeployDevBuildFrontendImages
    displayName: Dev Deploy - Frontend Images
    dependsOn: []
    condition: and(eq(variables.enableDeploy, 'true'), or(eq(variables.isMainBranch, 'true'), eq(variables.forceDevDeployment, 'true')))
    jobs:
    - template: jobs/cd-frontend.yml
      parameters:
        name: "DeployDevBuildFrontendImagesJob"
        subscription: "$(subscription)"
        containerRegistry: "$(dev-container-registry)"

  - stage: DeployDevBuildBackendImages
    displayName: Dev Deploy - Backend Images
    dependsOn: []
    condition: and(eq(variables.enableDeploy, 'true'), or(eq(variables.isMainBranch, 'true'), eq(variables.forceDevDeployment, 'true')))
    jobs:
    - template: jobs/cd-backend.yml
      parameters:
        name: "DeployDevBuildBackendImagesJob"
        subscription: "$(subscription)"
        containerRegistry: "$(dev-container-registry)"

  - stage: DeployDevHelmCharts
    displayName: Deploy Dev Helm Charts
    dependsOn:
      - DeployDevBuildFrontendImages
      - DeployDevBuildBackendImages
    condition: and(eq(variables.enableDeploy, 'true'), and(succeeded(), or(eq(variables.isMainBranch, 'true'), eq(variables.forceDevDeployment, 'true'))))
    jobs:
      - template: jobs/cd-helm.yml
        parameters:
          name: "DeployDevHelmChartsJob"
          subscription: "$(subscription)"
          aksClusterName: "$(dev-aks-cluster-name)"
          aksResourceGroup: "$(dev-aks-resource-group)"
          valueFile: "config/helm/causal-services/values.dev.yaml"

  - stage: DeployProdBuildFrontendImages
    displayName: Prod Deploy - Frontend Images
    dependsOn: []
    condition: and(eq(variables.enableDeploy, 'true'), eq(variables.isProdBranch, 'true'))
    jobs:
    - template: jobs/cd-frontend.yml
      parameters:
        name: "DeployProdBuildFrontendImagesJob"
        subscription: "$(subscription)"
        containerRegistry: "$(prod-container-registry)"

  - stage: DeployProdBuildBackendImages
    displayName: Prod Deploy - Backend Images
    dependsOn: []
    condition: and(eq(variables.enableDeploy, 'true'), eq(variables.isProdBranch, 'true'))
    jobs:
    - template: jobs/cd-backend.yml
      parameters:
        name: "DeployProdBuildBackendImagesJob"
        subscription: "$(subscription)"
        containerRegistry: "$(prod-container-registry)"

  - stage: DeployProdHelmCharts
    displayName: Deploy Prod Helm Charts
    dependsOn:
      - DeployProdBuildFrontendImages
      - DeployProdBuildBackendImages
    condition: and(eq(variables.enableDeploy, 'true'), and(succeeded(), eq(variables.isProdBranch, 'true')))
    jobs:
      - template: jobs/cd-helm.yml
        parameters:
          name: "DeployProdHelmChartsJob"
          subscription: "$(subscription)"
          aksClusterName: "$(prod-aks-cluster-name)"
          aksResourceGroup: "$(prod-aks-resource-group)"
          valueFile: "config/helm/causal-services/values.prod.yaml"